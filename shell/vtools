#!/bin/sh

# V Tools
# SPDX-License-Identifier: CC0-1.0

record_wayland_window() {
	FILE="screenrecord-$(date +%s).mp4"
	GEOMETRY=$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp)
	wf-recorder -g "$GEOMETRY" -f "$FILE"
}

record_wayland_selection() {
	FILE="screenrecord-$(date +%s).mp4"
	wf-recorder -g "$(slurp)" -f "$FILE"
}

silent_video() {
	INPUT="$1"
	if [ ! -s "$INPUT" ]; then
		echo "vtools silent-video [file]"
		exit 0
	fi
	echo "- Input File: $INPUT"
	# RAND=$(cat /dev/urandom | tr -dc 'a-z0-9' | head --bytes 8)
	DIR="$(dirname $(realpath $INPUT))"
	OUTPUT="${DIR}/$(date +%s)_$(basename $INPUT)"
	ffmpeg \
		-hide_banner -loglevel error \
		-f lavfi \
		-i anullsrc=channel_layout=stereo:sample_rate=44100 \
		-i "$INPUT" \
		-c:v copy -c:a aac -shortest \
		"$OUTPUT"
	echo "- Output File: $OUTPUT"
}

usage() {
	cat <<_EOF | GREP_COLORS='ms=1' egrep --color "vtools|$"
Usage: vtools silent-video [file.mp4]      add silent audio to video
       vtools record-wayland-window        record a window under wayland
       vtools record-wayland-selection     record the selected area under wayland
_EOF
	exit 1
}

case $1 in
	"silent-video")			silent_video "$2";;
	"record-wayland-selection")	record_wayland_selection;;
	"record-wayland-window")	record_wayland_window;;
	*) usage;;
esac
exit 0
