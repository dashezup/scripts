#!/bin/sh

# V Tools
# SPDX-License-Identifier: CC0-1.0

record_wayland_window() {
	FILE="screenrecord-$(date +%s).mp4"
	GEOMETRY=$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp)
	wf-recorder -g "$GEOMETRY" -f "$FILE"
}

record_wayland_selection() {
	FILE="screenrecord-$(date +%s).mp4"
	wf-recorder -g "$(slurp)" -f "$FILE"
}

silent_video() {
	INPUT="$1"
	if [ ! -s "$INPUT" ]; then
		echo "vtools silent-video [file]"
		exit 0
	fi
	echo "- Input File: $INPUT"
	# RAND=$(cat /dev/urandom | tr -dc 'a-z0-9' | head --bytes 8)
	DIR="$(dirname $(realpath $INPUT))"
	OUTPUT="${DIR}/$(date +%s)_$(basename $INPUT)"
	ffmpeg \
		-hide_banner -loglevel error \
		-f lavfi \
		-i anullsrc=channel_layout=stereo:sample_rate=44100 \
		-i "$INPUT" \
		-c:v copy -c:a aac -shortest \
		"$OUTPUT"
	echo "- Output File: $OUTPUT"
}

count() {
	echo "Input text for counting:"
	read -r text
	printf "$text" | wc
}

qrcode() {
	if [ -z "$1" ]; then
		echo "Input text for QR Code encoding:"
		read -r text
		printf "$text" | qrencode --type=ANSI256
	else
		zbarimg "$1"
	fi
}

network_connection_test() {
	time_seconds=$(curl \
		-o/dev/null \
		-sw '%{time_appconnect}' \
		'https://connectivitycheck.gstatic.com/generate_204'
	)
	# zsh
	# printf "%.0fms\n" $((time_seconds * 1000))
	time_ms=$(echo "${time_seconds} * 1000" | bc)
	printf "%.0fms\n" "$time_ms"
}

calculator() {
	echo "Input for calculation:\n"
	while true; do
		# bc <<<"scale=3; $(read -e)"
		read -r operation
		echo "scale=3; ${operation}" | bc
		echo
	done
}

usage() {
	cat <<_EOF | GREP_COLORS='ms=1' egrep --color "vtools|$"
Usage: vtools silent-video [file.mp4]      ffmpeg      | add silent audio to video
       vtools record-wayland-window        wf-recorder | record a window under wayland
       vtools record-wayland-selection     wf-recorder | record the selected area under wayland
       vtools count                        wc          | count newline/word/bytes for input text
       vtools qrcode [file]                qrencode    | encode/decode a QR Code
       vtools net                          curl        | network connection test
       vtools calculator                   bc          | calculate
_EOF
	exit 1
}

case $1 in
	"silent-video")			silent_video "$2";;
	"record-wayland-selection")	record_wayland_selection;;
	"record-wayland-window")	record_wayland_window;;
	"count")			count;;
	"qrcode")			qrcode "$2";;
	"net")				network_connection_test;;
	"calculator")			calculator;;
	*)				usage;;
esac
exit 0
